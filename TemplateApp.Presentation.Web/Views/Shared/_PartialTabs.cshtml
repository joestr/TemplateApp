@model TemplateApp.Presentation.Web.ViewModels.Shared.PartialTabs
@{
    Layout = null;
    bool firstRound;
}

<div style="display: flex;">
    @{ firstRound = true; }
    @foreach (var tab in Model.Tabs)
    {
        @if (
            (string.IsNullOrEmpty(Model.SelectedTab) && firstRound)
            || (!string.IsNullOrEmpty(Model.SelectedTab) && (tab.Id == Model.SelectedTab))
        )
        {
            <form method="get" action="">
                @foreach (var entry in Model.HiddenInputNameAndValues)
                {
                    <input type="hidden" name="@entry.Key" value="@entry.Value"/>
                }
                <button type="submit" name="@Model.Identifier@nameof(Model.SelectedTab)" value="@tab.Id" disabled>@tab.Title</button>
            </form>   
        }
        else
        {
            <form method="get" action="">
                @foreach (var entry in Model.HiddenInputNameAndValues)
                {
                    <input type="hidden" name="@entry.Key" value="@entry.Value"/>
                }
                <button type="submit" name="@Model.Identifier@nameof(Model.SelectedTab)" value="@tab.Id">@tab.Title</button>
            </form>
        }

        firstRound = false;
    }
</div>
@{ firstRound = true; }
@foreach (var tabC in Model.Tabs)
{
    @if (
        (string.IsNullOrEmpty(Model.SelectedTab) && firstRound)
        || (!string.IsNullOrEmpty(Model.SelectedTab) && (tabC.Id == Model.SelectedTab))
    )
    {
        <div id="@Model.Identifier@tabC.Id" style="display: block;">
            @await Html.PartialAsync(tabC.View, tabC.ViewModel)
        </div>
    }
    else
    {
        // Skip content it does not need to be rendered
        <div id="@Model.Identifier@tabC.Id" style="display: none;">
            Loading ...
        </div>
    }
        
    firstRound = false;
}
